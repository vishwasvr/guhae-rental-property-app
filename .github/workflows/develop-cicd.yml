name: Develop CI/CD

on:
  push:
    branches: [develop]

env:
  STACK_NAME: guhae-dev
  REGION: us-east-1

jobs:
  quality-check:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install dependencies
        run: |
          pip install flake8 bandit pytest pytest-cov moto boto3

      - name: Code linting
        run: |
          flake8 src/ --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 src/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Security scan
        run: |
          bandit -r src/ -f json -o security-report.json || true

      - name: Security audit
        run: |
          ./security-audit.sh

      - name: Upload security report
        uses: actions/upload-artifact@v4
        with:
          name: security-report
          path: security-report.json

      - name: Unit tests with coverage
        run: |
          # Install test dependencies
          pip install python-jose[cryptography] pytest-cov

          # Run tests with proper PYTHONPATH and pytest configuration
          PYTHONPATH=/home/runner/work/guhae-rental-property-app/guhae-rental-property-app/src python -m pytest --cov=src --cov-report=term-missing --cov-report=xml:coverage.xml --cov-report=html:htmlcov --cov-fail-under=80      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        if: success() || failure()
        with:
          name: coverage-report
          path: |
            htmlcov/
            coverage.xml

      - name: CloudFormation Lint
        run: |
          pip install cfn-lint
          cfn-lint deployment/cloudformation-serverless.yaml

  deploy-dev:
    needs: quality-check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.REGION }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install AWS CLI and dependencies
        run: |
          pip install awscli boto3

      - name: Validate AWS credentials
        run: |
          aws sts get-caller-identity

      - name: Deploy to development environment
        run: |
          cd deployment

          echo "ðŸš€ Starting development deployment..."
          echo "Stack: ${{ env.STACK_NAME }}"
          echo "Region: ${{ env.REGION }}"

          # Make deployment script executable
          chmod +x deploy-serverless.sh

          # Deploy everything to dev environment
          ./deploy-serverless.sh all

          echo "âœ… Development deployment completed successfully!"
