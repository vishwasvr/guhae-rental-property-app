name: Deploy to Development

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  AWS_REGION: us-east-1
  STACK_NAME: guhae-serverless

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install dependencies
        run: |
          pip install boto3 pytest

      - name: Lint Python code
        run: |
          pip install flake8
          flake8 src/ --count --select=E9,F63,F7,F82 --show-source --statistics

      - name: Validate CloudFormation
        run: |
          aws cloudformation validate-template \
            --template-body file://deployment/cloudformation-serverless.yaml \
            --region $AWS_REGION
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  deploy-dev:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment: development

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Deploy to Development
        run: |
          cd deployment
          chmod +x deploy-serverless.sh
          ./deploy-serverless.sh all
        env:
          STACK_NAME: ${{ env.STACK_NAME }}
          ENVIRONMENT: dev
          NOTIFICATION_EMAIL: ${{ secrets.NOTIFICATION_EMAIL }}

      - name: Test Deployment
        run: |
          cd deployment
          ./deploy-serverless.sh test

      - name: Comment PR with deployment info
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const output = `
            ## ðŸš€ Development Deployment Complete

            **Environment**: Development
            **Stack**: guhae-serverless
            **Region**: us-east-1

            **Next Steps**:
            - Review the deployed application
            - Run integration tests
            - Merge when ready for production
            `;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            });
